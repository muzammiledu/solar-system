name: Solar System Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
  pull_request:
    branches:
        - main
env:
  MONGO_URI: ${{ vars.MONGO_URI }}
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        name: Unit Testing
        strategy:
            matrix:
                nodejs-version: [18, 20]
                operating-system: [ubuntu-latest]
                exclude:
                    - nodejs-version: 18
                      operating-system: macos-latest
        runs-on: ${{ matrix.operating-system }}
        steps:
        - name: Checkout code
          uses: actions/checkout@v4
    
        - name: Set up Node.js - ${{ matrix.nodejs-version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.nodejs-version }}
        
        - name: Cache NPM Dependencies
          uses: actions/cache@v4
          with:
            path: node_modules
            key: ${{ runner.os }}-node-${{ matrix.nodejs-version }}-${{ hashFiles('**/package-lock.json') }}
        
        - name: Install dependencies
          run: npm install
        
        - name: Unit Testing
          run: npm test
        
        - name: Archive Test Result
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    
    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
        - name: Checkout code
          uses: actions/checkout@v4
    
        - name: Set up Node.js - 18
          uses: actions/setup-node@v3
          with:
            node-version: '18'
        
        - name: Cache NPM Dependencies
          uses: actions/cache@v4
          with:
            path: node_modules
            key: ${{ runner.os }}-node-${{ matrix.nodejs-version }}-${{ hashFiles('**/package-lock.json') }}
        
        - name: Install dependencies
          run: npm install
        
        - name: Check Code Coverage
          run: npm run coverage
        
        - name: Archive Code Coverage
          uses: actions/upload-artifact@v3
          with:
            name: Code-Coverage-Report
            path: coverage
    Docker: 
      name: Docker Image
      needs: [unit-testing, code-coverage]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v4

        - name: Dockerhub login
          uses: docker/login-action@v2
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}

        - name: Docker Build For testing
          uses: docker/build-push-action@v6
          with:
            context: .
            push: false
            tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

        - name: Docker Image Testing
          run: 
            docker images
            docker run --name solar-system-app -d  \
                -p 3000:3000 \
                -e MONGO_URI=$MONGO_URI \
                -e MONGO_USERNAME=$MONGO_USERNAME \
                -e MONGO_PASSWORD=$MONGO_PASSWORD \
                ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
            
            export IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
            echo "IP Address of the container is $IP"

            echo Testing Image URL using wget
            wget -q -O - 127.0.0.1:3000/live | grep live 